{"ast":null,"code":"import { __extends as o } from \"tslib\";\nimport { compareVersion as i } from \"@liff/util\";\nimport { getOS as n } from \"@liff/get-os\";\nimport { getLineVersion as e } from \"@liff/get-line-version\";\nimport { call as t } from \"@liff/native-bridge\";\nimport { LiffModule as f } from \"@liff/use\";\nfunction r() {\n  var o = e();\n  null !== o && (\"ios\" === n() && i(o, \"9.19\") >= 0 || \"android\" === n() && i(o, \"11.6.0\") >= 0) ? location.href = \"liff://close\" : window._liff && window._liff.postMessage ? null !== o && i(o, \"10.15.0\") >= 0 ? \"ios\" === n() ? window._liff.postMessage(\"closeWindow\", \"\") : window._liff.postMessage(\"closeWindow\", \"\", \"\", \"\") : t(\"closeWindow\") : window.close();\n}\nvar l = function (i) {\n  function n() {\n    return null !== i && i.apply(this, arguments) || this;\n  }\n  return o(n, i), Object.defineProperty(n.prototype, \"name\", {\n    get: function () {\n      return \"closeWindow\";\n    },\n    enumerable: !1,\n    configurable: !0\n  }), n.prototype.install = function () {\n    return function () {\n      return r();\n    };\n  }, n;\n}(f);\nexport { l as CloseWindowModule, r as closeWindow };","map":{"version":3,"names":["__extends","o","compareVersion","i","getOS","n","getLineVersion","e","call","t","LiffModule","f","r","location","href","window","_liff","postMessage","close","l","apply","arguments","Object","defineProperty","prototype","get","enumerable","configurable","install","CloseWindowModule","closeWindow"],"sources":["C:/Users/tanet/Desktop/register/node_modules/@liff/close-window/lib/index.es.js"],"sourcesContent":["import{__extends as o}from\"tslib\";import{compareVersion as i}from\"@liff/util\";import{getOS as n}from\"@liff/get-os\";import{getLineVersion as e}from\"@liff/get-line-version\";import{call as t}from\"@liff/native-bridge\";import{LiffModule as f}from\"@liff/use\";function r(){var o=e();null!==o&&(\"ios\"===n()&&i(o,\"9.19\")>=0||\"android\"===n()&&i(o,\"11.6.0\")>=0)?location.href=\"liff://close\":window._liff&&window._liff.postMessage?null!==o&&i(o,\"10.15.0\")>=0?\"ios\"===n()?window._liff.postMessage(\"closeWindow\",\"\"):window._liff.postMessage(\"closeWindow\",\"\",\"\",\"\"):t(\"closeWindow\"):window.close()}var l=function(i){function n(){return null!==i&&i.apply(this,arguments)||this}return o(n,i),Object.defineProperty(n.prototype,\"name\",{get:function(){return\"closeWindow\"},enumerable:!1,configurable:!0}),n.prototype.install=function(){return function(){return r()}},n}(f);export{l as CloseWindowModule,r as closeWindow};\n"],"mappings":"AAAA,SAAOA,SAAS,IAAIC,CAAC,QAAK,OAAO;AAAC,SAAOC,cAAc,IAAIC,CAAC,QAAK,YAAY;AAAC,SAAOC,KAAK,IAAIC,CAAC,QAAK,cAAc;AAAC,SAAOC,cAAc,IAAIC,CAAC,QAAK,wBAAwB;AAAC,SAAOC,IAAI,IAAIC,CAAC,QAAK,qBAAqB;AAAC,SAAOC,UAAU,IAAIC,CAAC,QAAK,WAAW;AAAC,SAASC,CAACA,CAAA,EAAE;EAAC,IAAIX,CAAC,GAACM,CAAC,CAAC,CAAC;EAAC,IAAI,KAAGN,CAAC,KAAG,KAAK,KAAGI,CAAC,CAAC,CAAC,IAAEF,CAAC,CAACF,CAAC,EAAC,MAAM,CAAC,IAAE,CAAC,IAAE,SAAS,KAAGI,CAAC,CAAC,CAAC,IAAEF,CAAC,CAACF,CAAC,EAAC,QAAQ,CAAC,IAAE,CAAC,CAAC,GAACY,QAAQ,CAACC,IAAI,GAAC,cAAc,GAACC,MAAM,CAACC,KAAK,IAAED,MAAM,CAACC,KAAK,CAACC,WAAW,GAAC,IAAI,KAAGhB,CAAC,IAAEE,CAAC,CAACF,CAAC,EAAC,SAAS,CAAC,IAAE,CAAC,GAAC,KAAK,KAAGI,CAAC,CAAC,CAAC,GAACU,MAAM,CAACC,KAAK,CAACC,WAAW,CAAC,aAAa,EAAC,EAAE,CAAC,GAACF,MAAM,CAACC,KAAK,CAACC,WAAW,CAAC,aAAa,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,GAACR,CAAC,CAAC,aAAa,CAAC,GAACM,MAAM,CAACG,KAAK,CAAC,CAAC;AAAA;AAAC,IAAIC,CAAC,GAAC,UAAShB,CAAC,EAAC;EAAC,SAASE,CAACA,CAAA,EAAE;IAAC,OAAO,IAAI,KAAGF,CAAC,IAAEA,CAAC,CAACiB,KAAK,CAAC,IAAI,EAACC,SAAS,CAAC,IAAE,IAAI;EAAA;EAAC,OAAOpB,CAAC,CAACI,CAAC,EAACF,CAAC,CAAC,EAACmB,MAAM,CAACC,cAAc,CAAClB,CAAC,CAACmB,SAAS,EAAC,MAAM,EAAC;IAACC,GAAG,EAAC,SAAAA,CAAA,EAAU;MAAC,OAAM,aAAa;IAAA,CAAC;IAACC,UAAU,EAAC,CAAC,CAAC;IAACC,YAAY,EAAC,CAAC;EAAC,CAAC,CAAC,EAACtB,CAAC,CAACmB,SAAS,CAACI,OAAO,GAAC,YAAU;IAAC,OAAO,YAAU;MAAC,OAAOhB,CAAC,CAAC,CAAC;IAAA,CAAC;EAAA,CAAC,EAACP,CAAC;AAAA,CAAC,CAACM,CAAC,CAAC;AAAC,SAAOQ,CAAC,IAAIU,iBAAiB,EAACjB,CAAC,IAAIkB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}